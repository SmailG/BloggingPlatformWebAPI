// <auto-generated />
using System;
using BloggingPlatformBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BloggingPlatformBackend.Migrations
{
    [DbContext(typeof(BloggingPlatformDB))]
    [Migration("20180710101614_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BloggingPlatformBackend.Models.BlogPost", b =>
                {
                    b.Property<int>("BlogPostID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("Favorited");

                    b.Property<int>("FavoritesCount");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(110)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("BlogPostID");

                    b.HasIndex("Slug")
                        .IsUnique()
                        .HasName("UQ__BlogPost__BC7B5FB6B0D63F8C");

                    b.ToTable("BlogPost");
                });

            modelBuilder.Entity("BloggingPlatformBackend.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogPostID");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("CommentID");

                    b.HasIndex("BlogPostID");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("BloggingPlatformBackend.Models.PostTags", b =>
                {
                    b.Property<int>("BlogPostID");

                    b.Property<int>("TagID");

                    b.HasKey("BlogPostID", "TagID");

                    b.HasIndex("TagID")
                        .IsUnique()
                        .HasName("UQ__PostTags__657CFA4D988AFF33");

                    b.ToTable("PostTags");
                });

            modelBuilder.Entity("BloggingPlatformBackend.Models.Tag", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("TagID");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("BloggingPlatformBackend.Models.Comment", b =>
                {
                    b.HasOne("BloggingPlatformBackend.Models.BlogPost", "BlogPost")
                        .WithMany("Comments")
                        .HasForeignKey("BlogPostID")
                        .HasConstraintName("FK__Comment__BlogPos__5629CD9C");
                });

            modelBuilder.Entity("BloggingPlatformBackend.Models.PostTags", b =>
                {
                    b.HasOne("BloggingPlatformBackend.Models.BlogPost", "BlogPost")
                        .WithMany("PostTags")
                        .HasForeignKey("BlogPostID")
                        .HasConstraintName("FK__PostTags__BlogPo__52593CB8");

                    b.HasOne("BloggingPlatformBackend.Models.Tag", "Tag")
                        .WithOne("PostTags")
                        .HasForeignKey("BloggingPlatformBackend.Models.PostTags", "TagID")
                        .HasConstraintName("FK__PostTags__TagID__534D60F1");
                });
#pragma warning restore 612, 618
        }
    }
}
